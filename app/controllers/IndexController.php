<?php

namespace Application\Controllers;

use Application\Core\User;
use Phalcon\Mvc\View;
use Phalcon\Http\Request;

class IndexController extends ControllerBase {
	public function beforeExecuteRoute($dispatcher)
    {
        parent::beforeExecuteRoute($dispatcher); // TODO: Change the autogenerated stub
    }
    public function mainAction(){
        if($request->isPost()){
            $tipe_request = $request->getPost('type_request');
            switch($tipe_request) {
                case 'new': 
                    $this->saveTodo($request);
                    break;
                case 'edit':
                    $this->updateTodo($request);
                    break;
                case 'delete':
                    $this->deleteTodo($request);
                    break;
                case 'detail':
                    $this->detailTodo($request);
            }
        }
        $this->view->todo = Todo::find();

    }
    private function saveTodo($request){

        $todo = new Todo();
        $todo->todo_code = $this->generateTodoCode();
        $todo->todo_name = $request->getPost('todo_name');
        $todo->todo_desc = $request->getPost('todo_desc');
        $todo->todo_status = 0;
        $todo->save();

        $this->view->disable();
        $this->flash->success('Todo insert success!');
        $this->response->redirect('');
    }

    private function updateTodo($request){

        $transaksi = Todo::findFirstById($request->getPost('id'));
        
        $todo->todo_code= $request->getPost('todo_code');
        $todo->todo_name = $request->getPost('todo_name');
        $todo->todo_desc = $request->getPost('todo_desc');
        $todoStatus = $request->getPost('todo_status');
        $todo->todo_status = 0;
        if($todoStatus) {
            $todo->todo_status = 1;
        }
        $todo->save();
        $this->view->disable();
        $this->flash->success('Todo updated!');
        $this->response->redirect('');
    }
    
    private function deleteTodo($request) {

        $todo = Todo::find($request->getPost('id'));
        $todo->delete();

        $this->view->disable();
        $this->flash->success('Todo removed!');
        $this->response->redirect('');
    }
    function generateTodoCode(){
        $latest = Todo::orderBy('todo_code', 'DESC')->latest()->first();
  
        if (!$latest) {
           $a = 'TD';         
           $c = '0000000001';
           $strip = '/';
           $code_data = "{$a}{$strip}{$c}";
           return $code_data;
        }
         /*fungsi untuk membaca sign transaksi */
         $todo_code = $latest->todo_code;
         $arr = explode("/", $todo_code, 2);
         $a = $arr[0];
         $kode = $arr[1];
         /*akhir fungsi untuk membaca sign transaksi */
         $strip = '/';
        return "{$a}{$strip}".sprintf('%010d', $kode+1);
      }
}

